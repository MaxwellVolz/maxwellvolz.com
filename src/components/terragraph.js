/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.10 .\\models\\02-assets\\raybans.glb 
*/

import React, { useRef, useState, Suspense, useEffect } from 'react';
import { useLoader, useFrame } from '@react-three/fiber';
import { useGLTF, SpotLight, Html } from '@react-three/drei';
import { Object3D, PointLight } from 'three'; // Import Object3D class from Three.js



export default function Terragraph(props) {
  const group = useRef();
  const { nodes, materials } = useGLTF('/terragraph.glb');
  const first_tx = useRef();
  const first_tx2 = useRef();
  const first_rx = useRef();

  const second_tx = useRef();
  const roof_middle = useRef();
  const roof_middle_rx = useRef();

  const front_stadium_tx = useRef();
  const front_stadium_rx = useRef();
  const middle_stadium_tx = useRef();
  const middle_stadium_rx = useRef();
  const park_node_tx1 = useRef();
  const park_node_tx = useRef();
  const park_node_rx = useRef();
  const purple_rooftop_tx2 = useRef();
  const purple_rooftop_tx = useRef();
  const purple_rooftop_rx = useRef();
  const meshRef8 = useRef();
  const meshRef8_rx = useRef();
  const meshRef9 = useRef();
  const stadium_tv_tx = useRef();
  const stadium_tv_rx = useRef();

  const spotlight_ref = useRef();
  const spotlightTarget = new Object3D();
  spotlightTarget.position.set(2, 0, -0.6); // Replace with your desired coordinates

  const radar1_target = new Object3D();
  radar1_target.position.set(2, 0, -0.6);

  const light_ref = useRef();
  const tv_ref = useRef();

  useFrame(({ clock }) => {
    const t = clock.getElapsedTime();

    // Update the position of the light to follow the mesh
    if (light_ref.current) {
      light_ref.current.position.copy(tv_ref.current.position);
    }

    // initial: [15.5, 3.125, -2.25]
    if (first_tx.current.position.x > 10) {
      first_tx.current.position.x -= 0.04;
    }
    else {
      first_tx.current.position.x = 15.5;
    }
    // initial: [15.5, 3.125, -2.25]
    if (first_tx2.current.position.z > -9.688) {
      first_tx2.current.position.z -= 0.05;
      first_tx2.current.position.x -= 0.002;
    }
    else {
      first_tx2.current.position.z = -2.25;
      first_tx2.current.position.x = 15.5;
    }

    // initial: 15.25, 3.125, -9.688
    // dest: 15.5, 3.125, -2.25
    if (first_rx.current.position.z < -2.25) {
      first_rx.current.position.z += 0.05;
      first_rx.current.position.x += 0.002;
    }
    else {
      first_rx.current.position.z = -9.688;
      first_rx.current.position.x = 15.25;
    }

    if (second_tx.current.position.x < 15.5) {
      second_tx.current.position.x += 0.03;
    }
    else {
      second_tx.current.position.x = 9.75;
    }

    if (meshRef8.current.position.z < -2.25) {
      meshRef8.current.position.z += 0.03;
    }
    else {
      meshRef8.current.position.z = -8.125;
    }

    if (meshRef8_rx.current.position.z > -8.125) {
      meshRef8_rx.current.position.z -= 0.03;
    }
    else {
      meshRef8_rx.current.position.z = -2.25;
    }

    // initial: 10.672, 5.25, -6.084
    // dest1: 15.25, 3.125, -9.688
    if (roof_middle.current.position.z < -2.25) {
      roof_middle.current.position.x -= 0.0047;
      roof_middle.current.position.y -= 0.0115;
      roof_middle.current.position.z += 0.02;
    }
    else {
      roof_middle.current.position.x = 10.672;
      roof_middle.current.position.y = 5.25;
      roof_middle.current.position.z = -6.084;
    }

    // initial: 10.672, 5.25, -6.084
    // dest1: 15.25, 3.125, -9.688
    if (roof_middle_rx.current.position.z > -6.084) {
      roof_middle_rx.current.position.x += 0.0047;
      roof_middle_rx.current.position.y += 0.0115;
      roof_middle_rx.current.position.z -= 0.02;
    }
    else {
      roof_middle_rx.current.position.x = 9.75;
      roof_middle_rx.current.position.y = 3.125;
      roof_middle_rx.current.position.z = -2.25;
    }

    if (front_stadium_tx.current.position.x > 8.25) {
      front_stadium_tx.current.position.x -= 0.03;
    }
    else {
      front_stadium_tx.current.position.x = 15.25;
    }

    if (front_stadium_rx.current.position.x < 15.25) {
      front_stadium_rx.current.position.x += 0.03;
    }
    else {
      front_stadium_rx.current.position.x = 8.25;
    }

    if (middle_stadium_tx.current.position.x < 9.65) {
      middle_stadium_tx.current.position.x += 0.011;
      middle_stadium_tx.current.position.z += 0.012;
    }
    else {
      middle_stadium_tx.current.position.x = 8.25;
      middle_stadium_tx.current.position.z = -9.688;
    }

    if (middle_stadium_rx.current.position.x > 8.35) {
      middle_stadium_rx.current.position.x -= 0.011;
      middle_stadium_rx.current.position.z -= 0.011;
    }
    else {
      middle_stadium_rx.current.position.x = 9.65;
      middle_stadium_rx.current.position.z = -8.25;
    }

    // initial: [2.25, 3.125, -6.956]
    // dest1: [4.618, 5.25, -13.566]
    if (park_node_tx.current.position.x < 4.618) {
      park_node_tx.current.position.x += 0.02;
      park_node_tx.current.position.y += 0.017;
      park_node_tx.current.position.z -= 0.055;
    }
    else {
      park_node_tx.current.position.x = 2.25;
      park_node_tx.current.position.y = 3.125;
      park_node_tx.current.position.z = -6.956;
    }

    // initial: [2.25, 3.125, -6.956]
    // dest1: [9.75, 3.125, -2.25]
    if (park_node_tx1.current.position.x < 9.75) {
      park_node_tx1.current.position.x += 0.02;
      park_node_tx1.current.position.z += 0.0125;
    }
    else {
      park_node_tx1.current.position.x = 2.25;
      park_node_tx1.current.position.z = -6.956;
    }

    // initial: [9.75, 3.125, -2.25]
    // dest: [2.25, 3.125, -6.956]
    if (park_node_rx.current.position.x > 2.25) {
      park_node_rx.current.position.x -= 0.02;
      park_node_rx.current.position.z -= 0.0125;
    }
    else {
      park_node_rx.current.position.x = 9.75;
      park_node_rx.current.position.z = -2.25;
    }

    // initial: [4.618, 5.25, -13.566]
    // dest1: [9.75, 3.125, -15.688]
    if (purple_rooftop_tx.current.position.x < 9.75) {
      purple_rooftop_tx.current.position.x += 0.03;
      purple_rooftop_tx.current.position.y -= 0.0125;
      purple_rooftop_tx.current.position.z -= 0.0125;
    }
    else {
      purple_rooftop_tx.current.position.x = 4.618;
      purple_rooftop_tx.current.position.y = 5.25;
      purple_rooftop_tx.current.position.z = -13.566;
    }

    // initial: [4.618, 5.25, -13.566]
    // dest1: [2.25, 3.125, -6.956]
    if (purple_rooftop_tx2.current.position.x > 2.25) {
      purple_rooftop_tx2.current.position.x -= 0.02;
      purple_rooftop_tx2.current.position.y -= 0.017;
      purple_rooftop_tx2.current.position.z += 0.055;
    }
    else {
      purple_rooftop_tx2.current.position.x = 4.618;
      purple_rooftop_tx2.current.position.y = 5.25;
      purple_rooftop_tx2.current.position.z = -13.566;
    }

    // initial: [9.75, 3.125, -15.688]
    // dest1: [4.618, 5.25, -13.566]
    if (purple_rooftop_rx.current.position.x > 4.618) {
      purple_rooftop_rx.current.position.x -= 0.02;
      purple_rooftop_rx.current.position.y += 0.0083;
      purple_rooftop_rx.current.position.z += 0.0084;
    }
    else {
      purple_rooftop_rx.current.position.x = 9.75;
      purple_rooftop_rx.current.position.y = 3.125;
      purple_rooftop_rx.current.position.z = -15.688;
    }

    // initial: [9.75, 3.125, -15.688]
    // dest1: [12.413, 4.358,  -15]
    if (stadium_tv_rx.current.position.x < 12.413) {
      stadium_tv_rx.current.position.x += 0.05;
      stadium_tv_rx.current.position.y += 0.023;
      stadium_tv_rx.current.position.z += 0.013;
    }
    else {
      stadium_tv_rx.current.position.x = 9.75;
      stadium_tv_rx.current.position.y = 3.125;
      stadium_tv_rx.current.position.z = -15.688;
    }

    if (stadium_tv_tx.current.position.x > 9.75) {
      stadium_tv_tx.current.position.x -= 0.05;
      stadium_tv_tx.current.position.y -= 0.023;
      stadium_tv_tx.current.position.z -= 0.013;
    }
    else {
      stadium_tv_tx.current.position.x = 12.413;
      stadium_tv_tx.current.position.y = 4.358;
      stadium_tv_tx.current.position.z = -15;
    }

  })

  const node_scale = 1.5 // original 0.746

  return (
    <group {...props} dispose={null}>


      <SpotLight
        ref={spotlight_ref}
        position={[0, 7, -1.7]}
        intensity={1}
        angle={Math.PI / 7}
        penumbra={1}
        decay={1}
        distance={7}
        color="white"
        target={spotlightTarget} // Point the spotlight at the mesh_ref
      />
      <group scale={0.03}>
        <group position={[26.625, 154.14, -12]} scale={1.34}>
          {/* <pointLight position={[0, -1, 0]} intensity={1} color="white" /> */}
          {/* <spotLight
            position={[20, 40, -20]}
            intensity={.5}
            angle={Math.PI / 6}
            penumbra={1}
            decay={1}
            distance={10}
            color="white"
          /> */}



          {/* terragraph nodes */}
          <mesh ref={first_tx} geometry={nodes.group_42.geometry} material={materials.Color_H03} position={[15.5, 3.125, -2.25]} scale={node_scale} />
          <mesh ref={first_tx2} geometry={nodes.group_42.geometry} material={materials.Color_H03} position={[15.5, 3.125, -2.25]} scale={node_scale} />
          <mesh ref={first_rx} geometry={nodes.group_40.geometry} material={materials.Color_H03} position={[15.25, 3.125, -9.688]} scale={node_scale} />
          <mesh ref={front_stadium_tx} geometry={nodes.group_40.geometry} material={materials.Color_H03} position={[15.25, 3.125, -9.688]} scale={node_scale} />
          <mesh ref={front_stadium_rx} geometry={nodes.group_40.geometry} material={materials.Color_H03} position={[15.25, 3.125, -9.688]} scale={node_scale} />

          <mesh ref={middle_stadium_tx} geometry={nodes.group_40.geometry} material={materials.Color_H03} position={[15.25, 3.125, -9.688]} scale={node_scale} />
          <mesh ref={middle_stadium_rx} geometry={nodes.group_40.geometry} material={materials.Color_H03} position={[15.25, 3.125, -9.688]} scale={node_scale} />

          <mesh ref={roof_middle} geometry={nodes.group_46.geometry} material={materials.Color_H03} position={[10.672, 5.25, -6.084]} scale={node_scale} />
          <mesh ref={roof_middle_rx} geometry={nodes.group_46.geometry} material={materials.Color_H03} position={[10.672, 5.25, -6.084]} scale={node_scale} />

          {/* <mesh ref={meshRef9} geometry={nodes.group_47.geometry} material={materials.Color_H03} position={[8.25, 3.125, -9.688]} scale={node_scale} /> */}
          <mesh ref={second_tx} geometry={nodes.group_41.geometry} material={materials.Color_H03} position={[9.75, 3.125, -2.25]} scale={node_scale} />


          {/* park node */}
          <mesh ref={park_node_tx} geometry={nodes.group_43.geometry} material={materials.Color_H03} position={[2.25, 3.125, -6.956]} scale={node_scale} />
          <mesh ref={park_node_tx1} geometry={nodes.group_43.geometry} material={materials.Color_H03} position={[2.25, 3.125, -6.956]} scale={node_scale} />
          <mesh ref={park_node_rx} geometry={nodes.group_43.geometry} material={materials.Color_H03} position={[2.25, 3.125, -6.956]} scale={node_scale} />

          {/* purple rooftop */}
          <mesh ref={purple_rooftop_tx} geometry={nodes.group_45.geometry} material={materials.Color_H03} position={[4.618, 5.25, -13.566]} scale={node_scale} />
          <mesh ref={purple_rooftop_tx2} geometry={nodes.group_45.geometry} material={materials.Color_H03} position={[4.618, 5.25, -13.566]} scale={node_scale} />
          <mesh ref={purple_rooftop_rx} geometry={nodes.group_45.geometry} material={materials.Color_H03} position={[4.618, 5.25, -13.566]} scale={node_scale} />

          <mesh ref={stadium_tv_rx} geometry={nodes.group_44.geometry} material={materials.Color_H03} position={[9.75, 3.125, -15.688]} scale={node_scale} />


          {/* Stadium TV */}
          <mesh ref={stadium_tv_tx} geometry={nodes.group_48.geometry} material={materials.Color_H03} position={[12.413, 4.358, -15]} scale={node_scale} />
          {/* <mesh ref={meshRef8} geometry={nodes.group_48.geometry} material={materials.Color_H03} position={[12.413, 4.358, -15]} scale={node_scale} /> */}
          <mesh ref={meshRef8} geometry={nodes.group_49.geometry} material={materials.Color_H03} position={[9.75, 3.125, -8.125]} scale={node_scale} />
          <mesh ref={meshRef8_rx} geometry={nodes.group_49.geometry} material={materials.Color_H03} position={[9.75, 3.125, -8.125]} scale={node_scale} />

          {/* Park */}
          <group position={[2, 1.625, -2]}>
            <group position={[4.56, 0.125, -4.205]}>
              <mesh geometry={nodes.group_26.geometry} material={materials['Color_F06.004']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_26001.geometry} material={materials['Color_F06.004']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_26002.geometry} material={materials['Color_F06.004']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_27.geometry} material={materials['Color_D07.002']} position={[0.417, 0, -0.417]} />
            </group>
            <group position={[3.802, 0.125, -0.743]}>
              <mesh geometry={nodes.group_32.geometry} material={materials['Color_F07.002']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_32001.geometry} material={materials['Color_F07.002']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_32002.geometry} material={materials['Color_F07.002']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_33.geometry} material={materials['Color_D08.002']} position={[0.417, 0, -0.417]} />
            </group>
            <group position={[1.685, 0.125, -4.393]}>
              <mesh geometry={nodes.group_35.geometry} material={materials['Color_F07.002']} position={[-0.139, 0.749, 0.139]} scale={[1.29, 1.793, 1.29]} />
              <mesh geometry={nodes.group_35001.geometry} material={materials['Color_F07.002']} position={[-0.139, 0.749, 0.139]} scale={[1.29, 1.793, 1.29]} />
              <mesh geometry={nodes.group_35002.geometry} material={materials['Color_F07.002']} position={[-0.139, 0.749, 0.139]} scale={[1.29, 1.793, 1.29]} />
              <mesh geometry={nodes.group_36.geometry} material={materials['Color_D07.002']} position={[0.417, 0, -0.417]} />
            </group>
            <group position={[4.123, 0.125, -2.955]}>
              <mesh geometry={nodes.group_38.geometry} material={materials['Color_F08.002']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_38001.geometry} material={materials['Color_F08.002']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_38002.geometry} material={materials['Color_F08.002']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_38003.geometry} material={materials['Color_F08.002']} position={[0, 0.75, 0]} />
              <mesh geometry={nodes.group_39.geometry} material={materials['Color_D08.002']} position={[0.417, 0, -0.417]} />
            </group>
            <mesh geometry={nodes.group_28.geometry} material={materials['Color_M01.002']} position={[0.25, 0, -5.081]} rotation={[-Math.PI, 0, -Math.PI]} />
            <group position={[0, 0, -6.5]} rotation={[0, -1.571, 0]}>
              <mesh geometry={nodes.ID342.geometry} material={materials['Color_M01.002']} />
              <mesh geometry={nodes.ID342_1.geometry} material={materials['Color_M00.002']} />
              <mesh geometry={nodes.group_30.geometry} material={materials['Color_M01.002']} />
              <mesh geometry={nodes.group_30001.geometry} material={materials['Color_M01.002']} />
            </group>
            <mesh geometry={nodes.group_29001.geometry} material={materials['Color_M01.002']} position={[0, 0, -6.5]} rotation={[0, -1.571, 0]} />
            <group position={[0, 0, -6.5]} rotation={[0, -1.571, 0]}>
              <mesh geometry={nodes.ID356.geometry} material={materials['Color_M01.002']} />
              <mesh geometry={nodes.ID356_1.geometry} material={materials['Color_I03.002']} />
            </group>
            <group position={[0, 0, -6.5]} rotation={[0, -1.571, 0]}>
              <mesh geometry={nodes.ID364.geometry} material={materials['Color_M01.002']} />
              <mesh geometry={nodes.ID364_1.geometry} material={materials['Color_D07.002']} />
            </group>
            <group position={[0, 0, -6.5]} rotation={[0, -1.571, 0]}>
              <mesh geometry={nodes.ID370.geometry} material={materials['Color_F06.004']} />
              <mesh geometry={nodes.ID370_1.geometry} material={materials['Color_M01.002']} />
            </group>
          </group>
          <mesh geometry={nodes.group_1.geometry} material={materials['material.005']} position={[10.672, 3.75, -6.209]} rotation={[-Math.PI, 0, -Math.PI]} />

          {/* Business 1 */}
          <mesh geometry={nodes.group_16.geometry} material={materials['Color_M01.002']} position={[9.5, 1.625, -2]}>
            <mesh geometry={nodes.group_17.geometry} material={materials['material.005']} position={[0.375, 0, -6.125]} />
            <mesh geometry={nodes.group_18.geometry} material={materials['material.005']} position={[0.375, 0, -0.25]} />
            <mesh geometry={nodes.group_19.geometry} material={materials['Color_H01.002']} position={[0.75, 0, -5.5]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_19001.geometry} material={materials['Color_H01.002']} position={[0.75, 0, -5.5]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_19002.geometry} material={materials['Color_H01.002']} position={[0.75, 0, -5.5]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_20.geometry} material={materials['Color_A01.002']} position={[3.75, 0, -2.75]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_20001.geometry} material={materials['Color_A01.002']} position={[3.75, 0, -2.75]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_21.geometry} material={materials['Color_E02.002']} position={[3.625, 0, -5.75]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_21001.geometry} material={materials['Color_E02.002']} position={[3.625, 0, -5.75]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_22.geometry} material={materials['Color_G02.002']} position={[0.75, 0, -2.75]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_22001.geometry} material={materials['Color_G02.002']} position={[0.75, 0, -2.75]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_23.geometry} material={materials['material.005']} position={[6.125, 0, -0.25]} />
          </mesh>

          {/* Business  */}
          <mesh geometry={nodes.group_16001.geometry} material={materials['material.005']} position={[9.5, 1.625, -2]} />
          <mesh geometry={nodes.group_2.geometry} material={materials['Color_I01.002']} position={[10, 1.625, -15.25]} rotation={[0, -1.571, 0]}>
            <mesh geometry={nodes.group_3.geometry} material={materials['Color_I01.002']} position={[0.375, 2.188, -1.5]} rotation={[0, 1.571, 0]} />
            <group position={[0.375, 2.188, -1.5]} rotation={[0, 1.571, 0]}>
              <mesh geometry={nodes.ID23.geometry} material={materials['Color_I01.002']} />
              <mesh ref={tv_ref} geometry={nodes.ID23_1.geometry} material={materials['Color_M07.002']} >
                <directionalLight color="red" position={[0, 1, 0]} />
              </mesh>
            </group>
            <mesh geometry={nodes.group_4.geometry} material={materials['Color_I01.002']} position={[0.375, 3.188, -3.376]} rotation={[0, 1.571, 0]} />
          </mesh>
          <mesh geometry={nodes.group_2001.geometry} material={materials['Color_I01.002']} position={[10, 1.625, -15.25]} rotation={[0, -1.571, 0]} />
          <group position={[10, 1.625, -15.25]} rotation={[0, -1.571, 0]}>
            <mesh geometry={nodes.ID57.geometry} material={materials['Color_I01.002']} />
            <mesh geometry={nodes.ID57_1.geometry} material={materials['Color_F06.004']} />
          </group>


          {/* Drei's HTML component can "hide behind" canvas geometry */}
          {/* <Html className="content" rotation-x={-Math.PI / 2} position={[0, 0.05, -0.09]} transform occlude>
              <div className="wrapper" onPointerDown={(e) => e.stopPropagation()}>
                <span>hello</span>
              </div>
            </Html> */}


          <mesh geometry={nodes.group_6.geometry} material={materials['material.005']} />
          <mesh geometry={nodes.group_6001.geometry} material={materials['material.005']} />
          <mesh geometry={nodes.group_6002.geometry} material={materials['material.005']} />
          <mesh geometry={nodes.group_7.geometry} material={materials['Color_M01.002']} position={[2, 1.625, -16]} rotation={[0, -1.571, 0]}>
            <mesh geometry={nodes.group_10.geometry} material={materials['Color_B01.002']} position={[0.75, 0, -3.875]} />
            <mesh geometry={nodes.group_10001.geometry} material={materials['Color_B01.002']} position={[0.75, 0, -3.875]} />
            <mesh geometry={nodes.group_11.geometry} material={materials['Color_F01.002']} position={[3.75, 0, -1]} />
            <mesh geometry={nodes.group_11001.geometry} material={materials['Color_F01.002']} position={[3.75, 0, -1]} />
            <mesh geometry={nodes.group_12.geometry} material={materials['material.005']} position={[2.309, 2.125, -2.618]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_13.geometry} material={materials['material.005']} position={[6.188, 0, -6.25]} rotation={[0, -1.571, 0]} />
            <mesh geometry={nodes.group_14.geometry} material={materials['material.005']} position={[0.313, 0, -7.875]} rotation={[0, 1.571, 0]} />
            <mesh geometry={nodes.group_15.geometry} material={materials['material.005']} position={[6.313, 0, -13.375]} rotation={[0, 1.571, 0]} />
            <mesh geometry={nodes.group_8.geometry} material={materials['Color_I01.002']} position={[1, 0, -1]} />
            <mesh geometry={nodes.group_8001.geometry} material={materials['Color_I01.002']} position={[1, 0, -1]} />
            <mesh geometry={nodes.group_8002.geometry} material={materials['Color_I01.002']} position={[1, 0, -1]} />
            <mesh geometry={nodes.group_9.geometry} material={materials['Color_K01.002']} position={[3.75, 0, -4]} />
            <mesh geometry={nodes.group_9001.geometry} material={materials['Color_K01.002']} position={[3.75, 0, -4]} />
          </mesh>
          <mesh geometry={nodes.group_7001.geometry} material={materials['material.005']} position={[2, 1.625, -16]} rotation={[0, -1.571, 0]} />
        </group>
      </group>
    </group>
  )
}
