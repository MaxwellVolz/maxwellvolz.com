/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\\hut.glb
*/
import { useRef, Suspense } from 'react';
import { useLoader, useFrame } from '@react-three/fiber';
import { useGLTF, SpotLight, useVideoTexture, useTexture, useAspect } from '@react-three/drei';
import { TextureLoader } from 'three/src/loaders/TextureLoader'
import { easing } from 'maath'
import { useControls } from 'leva';
import { Vector3, Color } from 'three'

// import { UnrealBloomPass } from 'three/addons/postprocessing/UnrealBloomPass.js';
// import { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass'
import Effects from './Effects'
import { Object3D } from 'three'; // Import Object3D class from Three.js


export default function HutModel(props) {
    const group = useRef();
    const { nodes, materials } = useGLTF("./github.glb");

    const logo_ref = useRef();
    let logojs_rotation = 0
    const mesh_ref = useRef();

    let github_color = new Color('#6E5494');

    const open_github = () => {
        const confirmed = window.confirm("Are you sure you want to open the GitHub profile?");
        if (confirmed) {
            window.open("https://github.com/MaxwellVolz");
        }
    }
    const spotlight_ref = useRef();
    const spotlightTarget = new Object3D();
    spotlightTarget.position.set(2, 0, 2); // Replace with your desired coordinates


    useFrame(({ clock }) => {
        const a = clock.getElapsedTime();
        // mesh_ref.current.rotation.y = a;
        // easing.dampE(logo_ref.current.rotation, [0, state.pointer.x * (state.camera.position.z > 1 ? 1 : -1), 0], 0.4, delta)
    })

    return (
        <group {...props} ref={logo_ref} dispose={null} >
            <SpotLight
                ref={spotlight_ref}
                position={[.5, 3, 0]}
                intensity={1}
                angle={Math.PI / 7}
                penumbra={1}
                decay={1}
                distance={7}
                color="white"
                target={spotlightTarget} // Point the spotlight at the mesh_ref
            />
            <group rotation={[0, Math.PI / 4, 0]} scale={[.04, .1, 0.04]} position={[2, .7, 2]}>
                <mesh geometry={nodes.Github_logo.geometry} material={nodes.Github_logo.material}>
                    <meshPhongMaterial color={github_color} />
                </mesh>
                <mesh scale={[76, 1, 20]} position={[0, -2, 0]} onClick={() => open_github()}>
                    <boxGeometry />
                    <meshPhongMaterial opacity={0.0} transparent={true} />
                </mesh>
            </group>
        </group>
    );
}
